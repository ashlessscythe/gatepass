generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(GUARD)
  accounts      Account[]
  sessions      Session[]
  createdPasses Gatepass[] @relation("CreatedBy")
  updatedPasses Gatepass[] @relation("UpdatedBy")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ADMIN
  GUARD
  DISPATCH
  WAREHOUSE
}

enum GatepassStatus {
  PENDING
  BOL_VERIFIED
  IN_YARD
  CHECKED_IN
  LOADING
  COMPLETED
  CANCELLED
}

enum Purpose {
  PICKUP
  SERVICE
  DELIVER
  OTHER
}

model Gatepass {
  id                String         @id @default(cuid())
  formNumber       String?        @unique
  dateIn           DateTime
  timeIn           DateTime
  dateOut          DateTime?
  timeOut          DateTime?
  carrier          String
  truckLicenseNo   String        // License No. Truck
  truckNo          String        // Truck No.
  trailerLicenseNo String?       // License No. Trailer
  trailerNo        String?       // Trailer No.
  operatorName     String        // Name of Operator
  passengerName    String?       // Name of Passenger
  purpose          Purpose
  sealed           Boolean       @default(false)
  sealNo1          String?       // Seal No. 1
  sealNo2          String?       // Seal No. 2
  remarks          String?       // Remarks
  securityOfficer  String        // Security Officer
  releaseRemarks   String?       // Release Pass Remarks
  trailerType      String?       // Trailer Type
  releaseTrailerNo String?       // Trailer No. (Release)
  destination      String?       // Destination
  vehicleInspected Boolean       @default(false) // Vehicle Inspected
  releaseSealNo    String?       // Seal No. (Release)
  vestReturned     Boolean       @default(false) // Vest Returned
  receiverSignature String?      @db.Text
  shipperSignature  String?      @db.Text
  securitySignature String?      @db.Text
  status           GatepassStatus @default(PENDING)
  bolNumber        String?
  pickupDoor       String?
  yardCheckinTime  DateTime?
  documentsTransferred Boolean    @default(false)
  createdById      String
  updatedById      String?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  createdBy        User          @relation("CreatedBy", fields: [createdById], references: [id])
  updatedBy        User?         @relation("UpdatedBy", fields: [updatedById], references: [id])

  @@index([formNumber])
  @@index([dateIn])
  @@index([carrier])
}
